## GAME OVERVIEW
- This game is a browser based, massively multiplayer real-time strategy game.
- Isometric geometry with tile based map
- Human players vs. AI.
- Short matches no longer than 1 hour.
- Game map and difficulty changes every game.
- AI will be involved in creating game (map, other parameters) - later feature.
- At start of game the number of connected clients determines the map size
- goal is to be able to have hundreds or possibly thousands of players in a single game

## Current State
- Map loads with human and AI base
- Inconsistently renders map fully
- Inconsistently shows a unit of a connected client
- When a unit does load it is selectable and can be moved correctly

// cursorrules - Client-Server Responsibility Definition

# Server-Side Responsibilities
- Authoritative management of game state (units, buildings, resources)
- Validation and execution of player commands
- Game logic processing (combat resolution, production timers, resource extraction)
- State synchronization and broadcasting to clients
- Player connection management (join, disconnect, state initialization)

# Client-Side Responsibilities
- Rendering of entities, map, and UI elements
- Input capture and immediate visual feedback for player interactions
- Smooth visual interpolation between server updates (entity movement interpolation)
- User interface management (selection, unit/building status, minimap, HUD)
- Camera viewport handling (scroll, zoom, minimap navigation)
- Efficient resource (image) loading and fallback strategies

## Client-Server Protocol and Interaction
- Clients send requests for actions (movement, building, attacks); server responds with authoritative updates
- Clients perform visual interpolation to smooth transitions between server updates
- Server regularly broadcasts game state snapshots for synchronization
- Clients maintain local prediction for responsiveness, corrected periodically by server updates

## Next Goals
- 

## File Structure (subject to change)

├── public/           # Public assets (HTML, CSS, static files)
│   ├── index.html    # Main HTML entry point
│   └── styles.css    # CSS styles
│
├── src/              # Source code directory
│   ├── game/         # Game logic components
│   ├── rendering/    # Rendering and display logic
│   ├── input/        # Input handling
│   └── index.js      # Main entry point for the application
│
├── start             # Script to start the application
└── stop              # Script to stop the application

## Rules To Follow
- Only modify client OR server side functionality at a time.  Get permission explicitly if changing from one to the other.
- Do not overcomplicate git commits. .add, commit, push.  Same with reset - reset Head
- Only start and stop program with ./start, ./stop